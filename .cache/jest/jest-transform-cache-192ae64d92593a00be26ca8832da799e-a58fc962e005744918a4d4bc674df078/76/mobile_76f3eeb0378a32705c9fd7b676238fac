'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);var _createClass2 = require('babel-runtime/helpers/createClass');var _createClass3 = _interopRequireDefault(_createClass2);var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);var _inherits2 = require('babel-runtime/helpers/inherits');var _inherits3 = _interopRequireDefault(_inherits2);var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _commonLayoutStyles = require('./commonLayoutStyles');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var leftPanelStyle = {
  display: 'block',
  width: '100%' };


var contentPanelStyle = {
  position: 'relative',
  boxSizing: 'border-box',
  width: '100%',
  height: '100%',
  padding: '0' };


var downPanelStyle = {
  display: 'flex',
  position: 'absolute',
  width: '100%',
  height: '100%',
  padding: '10px',
  boxSizing: 'border-box' };


var normalPreviewStyle = {
  width: '100%',
  height: '100%',
  backgroundColor: '#FFF',
  borderTop: '1px solid #ECECEC' };var


LayoutMobile = function (_React$Component) {(0, _inherits3.default)(LayoutMobile, _React$Component);function LayoutMobile() {(0, _classCallCheck3.default)(this, LayoutMobile);return (0, _possibleConstructorReturn3.default)(this, (LayoutMobile.__proto__ || Object.getPrototypeOf(LayoutMobile)).apply(this, arguments));}(0, _createClass3.default)(LayoutMobile, [{ key: 'render', value: function render()
    {var _props =







      this.props,goFullScreen = _props.goFullScreen,showLeftPanel = _props.showLeftPanel,showDownPanel = _props.showDownPanel,downPanel = _props.downPanel,leftPanel = _props.leftPanel,preview = _props.preview;
      var previewStyle = goFullScreen ? _commonLayoutStyles.fullScreenPreviewStyle : normalPreviewStyle;
      return (
        _react2.default.createElement('div', { style: _commonLayoutStyles.rootStyle },
          _react2.default.createElement('div', { style: leftPanelStyle },
            showLeftPanel && leftPanel()),

          _react2.default.createElement('div', { style: contentPanelStyle },
            _react2.default.createElement('div', { style: previewStyle },
              preview())),


          _react2.default.createElement('div', { style: downPanelStyle },
            showDownPanel ? downPanel() : null)));



    } }]);return LayoutMobile;}(_react2.default.Component);


LayoutMobile.propTypes = {
  showLeftPanel: _react.PropTypes.bool.isRequired,
  showDownPanel: _react.PropTypes.bool.isRequired,
  goFullScreen: _react.PropTypes.bool.isRequired,
  leftPanel: _react.PropTypes.func.isRequired,
  preview: _react.PropTypes.func.isRequired,
  downPanel: _react.PropTypes.func.isRequired };exports.default =


LayoutMobile;