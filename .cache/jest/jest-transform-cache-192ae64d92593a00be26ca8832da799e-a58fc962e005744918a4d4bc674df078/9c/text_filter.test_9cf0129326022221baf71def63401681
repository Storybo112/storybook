'use strict';var _enzyme = require('enzyme');
var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _text_filter = require('./text_filter');var _text_filter2 = _interopRequireDefault(_text_filter);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('manager.ui.components.left_panel.test_filter', function () {
  describe('render', function () {
    test('should render input without filterText', function () {
      var wrap = (0, _enzyme.shallow)(_react2.default.createElement(_text_filter2.default, null));
      var input = wrap.find('input').first();

      expect(input).toHaveProp('placeholder', 'Filter');
    });

    test('should render input with filterText', function () {
      var wrap = (0, _enzyme.shallow)(_react2.default.createElement(_text_filter2.default, { text: 'Filter Text' }));
      var input = wrap.find('input').first();

      expect(input).toHaveProp('value', 'Filter Text');
    });
  });

  describe('functions', function () {
    test('should call the onChange prop when input changes', function () {
      var onChange = jest.fn();
      var wrap = (0, _enzyme.shallow)(_react2.default.createElement(_text_filter2.default, { onChange: onChange }));

      var input = wrap.find('input').first();
      input.value = 'new value';
      input.simulate('change', { target: input });

      expect(onChange).toHaveBeenCalledWith('new value');
    });

    test('should call the onClear prop when the button is clicked', function () {
      var onClear = jest.fn();
      var wrap = (0, _enzyme.shallow)(_react2.default.createElement(_text_filter2.default, { onClear: onClear }));
      wrap.setState({ query: 'hello' });

      var clear = wrap.find('.clear');
      clear.simulate('click');

      expect(onClear).toHaveBeenCalled();
    });
  });
});