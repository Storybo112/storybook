'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);
var _lodash = require('lodash.pick');var _lodash2 = _interopRequireDefault(_lodash);
var _lodash3 = require('lodash.isstring');var _lodash4 = _interopRequireDefault(_lodash3);
var _reactMedia = require('react-media');var _reactMedia2 = _interopRequireDefault(_reactMedia);
var _header = require('./header');var _header2 = _interopRequireDefault(_header);
var _stories = require('./stories');var _stories2 = _interopRequireDefault(_stories);
var _text_filter = require('./text_filter');var _text_filter2 = _interopRequireDefault(_text_filter);
var _collapsible = require('../collapsible');var _collapsible2 = _interopRequireDefault(_collapsible);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var containerStyle = {
  margin: '10px 0px 10px 10px' };


var scrollStyle = {
  height: 'calc(100vh - 105px)',
  overflow: 'auto' };


var mobileContainerStyle = {
  marginLeft: '10px',
  marginRight: '10px',
  paddingTop: '10px' };


var mobileScrollStyle = {
  maxHeight: 'calc(100vw + 100px)',
  overflow: 'auto' };


var storyProps = ['stories', 'selectedKind', 'selectedStory', 'onSelectStory'];

var LeftPanel = function LeftPanel(props) {return (
    _react2.default.createElement(_reactMedia2.default, { query: '(max-width: 650px)' },
      function (matches) {return (
          matches ?
          _react2.default.createElement('div', { style: mobileContainerStyle },
            _react2.default.createElement(_header2.default, { name: props.name, url: props.url, openShortcutsHelp: props.openShortcutsHelp }),
            _react2.default.createElement(_collapsible2.default, { isActive: (0, _lodash4.default)(props.storyFilter), title: 'component list' },
              _react2.default.createElement(_text_filter2.default, {
                text: props.storyFilter,
                onClear: function onClear() {return props.onStoryFilter('');},
                onChange: function onChange(text) {return props.onStoryFilter(text);} }),

              props.stories &&
              _react2.default.createElement('div', { style: mobileScrollStyle },
                _react2.default.createElement(_stories2.default, (0, _lodash2.default)(props, storyProps))))) :



          _react2.default.createElement('div', { style: containerStyle },
            _react2.default.createElement(_header2.default, { name: props.name, url: props.url, openShortcutsHelp: props.openShortcutsHelp }),
            _react2.default.createElement(_text_filter2.default, {
              text: props.storyFilter,
              onClear: function onClear() {return props.onStoryFilter('');},
              onChange: function onChange(text) {return props.onStoryFilter(text);} }),

            _react2.default.createElement('div', { style: scrollStyle },
              props.stories ? _react2.default.createElement(_stories2.default, (0, _lodash2.default)(props, storyProps)) : null)));}));};





LeftPanel.propTypes = {
  stories: _propTypes2.default.array,
  selectedKind: _propTypes2.default.string,
  selectedStory: _propTypes2.default.string,
  onSelectStory: _propTypes2.default.func,

  storyFilter: _propTypes2.default.string,
  onStoryFilter: _propTypes2.default.func,

  openShortcutsHelp: _propTypes2.default.func,
  name: _propTypes2.default.string,
  url: _propTypes2.default.string };exports.default =


LeftPanel;