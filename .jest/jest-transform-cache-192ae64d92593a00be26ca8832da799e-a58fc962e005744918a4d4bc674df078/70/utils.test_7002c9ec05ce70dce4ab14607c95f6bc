'use strict';var _mockFs = require('mock-fs');var _mockFs2 = _interopRequireDefault(_mockFs);
var _utils = require('./utils');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var HEAD_HTML_CONTENTS = '<script>console.log("custom script!");</script>';

describe('server.getHeadHtml', function () {
  describe('when .storybook/head.html does not exist', function () {
    beforeEach(function () {
      (0, _mockFs2.default)({
        config: {} });

    });

    afterEach(function () {
      _mockFs2.default.restore();
    });

    it('return an empty string', function () {
      var result = (0, _utils.getHeadHtml)('./config');
      expect(result).toEqual('');
    });
  });

  describe('when .storybook/head.html exists', function () {
    beforeEach(function () {
      (0, _mockFs2.default)({
        config: {
          'head.html': HEAD_HTML_CONTENTS } });


    });

    afterEach(function () {
      _mockFs2.default.restore();
    });

    it('return the contents of the file', function () {
      var result = (0, _utils.getHeadHtml)('./config');
      expect(result).toEqual(HEAD_HTML_CONTENTS);
    });
  });
});