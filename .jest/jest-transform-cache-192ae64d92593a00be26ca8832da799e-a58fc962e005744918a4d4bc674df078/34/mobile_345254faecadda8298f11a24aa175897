'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _commonLayoutStyles = require('./commonLayoutStyles');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var leftPanelStyle = {
  display: 'block',
  width: '100%' };


var contentPanelStyle = {
  position: 'relative',
  boxSizing: 'border-box',
  width: '100%',
  height: '100%',
  padding: '0' };


var downPanelStyle = {
  display: 'flex',
  position: 'absolute',
  width: '100%',
  height: '100%',
  padding: '10px',
  boxSizing: 'border-box' };


var normalPreviewStyle = {
  width: '100%',
  height: '100%',
  backgroundColor: '#FFF',
  borderTop: '1px solid #ECECEC' };var


LayoutMobile = function (_React$Component) {_inherits(LayoutMobile, _React$Component);function LayoutMobile() {_classCallCheck(this, LayoutMobile);return _possibleConstructorReturn(this, (LayoutMobile.__proto__ || Object.getPrototypeOf(LayoutMobile)).apply(this, arguments));}_createClass(LayoutMobile, [{ key: 'render', value: function render()
    {var _props =







      this.props,goFullScreen = _props.goFullScreen,showLeftPanel = _props.showLeftPanel,showDownPanel = _props.showDownPanel,downPanel = _props.downPanel,leftPanel = _props.leftPanel,preview = _props.preview;
      var previewStyle = goFullScreen ? _commonLayoutStyles.fullScreenPreviewStyle : normalPreviewStyle;
      return (
        _react2.default.createElement('div', { style: _commonLayoutStyles.rootStyle },
          _react2.default.createElement('div', { style: leftPanelStyle },
            showLeftPanel && leftPanel()),

          _react2.default.createElement('div', { style: contentPanelStyle },
            _react2.default.createElement('div', { style: previewStyle },
              preview())),


          _react2.default.createElement('div', { style: downPanelStyle },
            showDownPanel ? downPanel() : null)));



    } }]);return LayoutMobile;}(_react2.default.Component);


LayoutMobile.propTypes = {
  showLeftPanel: _react.PropTypes.bool.isRequired,
  showDownPanel: _react.PropTypes.bool.isRequired,
  goFullScreen: _react.PropTypes.bool.isRequired,
  leftPanel: _react.PropTypes.func.isRequired,
  preview: _react.PropTypes.func.isRequired,
  downPanel: _react.PropTypes.func.isRequired };exports.default =


LayoutMobile;