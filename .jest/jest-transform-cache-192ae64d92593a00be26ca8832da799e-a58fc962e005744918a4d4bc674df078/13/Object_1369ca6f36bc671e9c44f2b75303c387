'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);
var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _reactTextareaAutosize = require('react-textarea-autosize');var _reactTextareaAutosize2 = _interopRequireDefault(_reactTextareaAutosize);
var _deepEqual = require('deep-equal');var _deepEqual2 = _interopRequireDefault(_deepEqual);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var styles = {
  display: 'table-cell',
  boxSizing: 'border-box',
  verticalAlign: 'middle',
  width: '100%',
  outline: 'none',
  border: '1px solid #f7f4f4',
  borderRadius: 2,
  fontSize: 11,
  padding: '5px',
  color: '#555',
  fontFamily: 'monospace' };var


ObjectType = function (_React$Component) {_inherits(ObjectType, _React$Component);
  function ObjectType() {var _ref;_classCallCheck(this, ObjectType);for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}var _this = _possibleConstructorReturn(this, (_ref = ObjectType.__proto__ || Object.getPrototypeOf(ObjectType)).call.apply(_ref, [this].concat(
    args)));
    _this.state = {};return _this;
  }_createClass(ObjectType, [{ key: 'getJSONString', value: function getJSONString()

    {var _state =
      this.state,json = _state.json,jsonString = _state.jsonString;var
      knob = this.props.knob;

      // If there is an error in the JSON, we need to give that errored JSON.
      if (this.failed) return jsonString;

      // If the editor value and the knob value is the same, we need to return the
      // editor value as it allow user to add new fields to the JSON.
      if ((0, _deepEqual2.default)(json, knob.value)) return jsonString;

      // If the knob's value is different from the editor, it seems like
      // there's a outside change and we need to get that.
      return JSON.stringify(knob.value, null, 2);
    } }, { key: 'handleChange', value: function handleChange(

    e) {var
      onChange = this.props.onChange;
      var newState = {
        jsonString: e.target.value };


      try {
        newState.json = JSON.parse(e.target.value.trim());
        onChange(newState.json);
        this.failed = false;
      } catch (err) {
        this.failed = true;
      }

      this.setState(newState);
    } }, { key: 'render', value: function render()

    {var _this2 = this;var
      knob = this.props.knob;
      var jsonString = this.getJSONString();
      var extraStyle = {};

      if (this.failed) {
        extraStyle.border = '1px solid #fadddd';
        extraStyle.backgroundColor = '#fff5f5';
      }

      return (
        _react2.default.createElement(_reactTextareaAutosize2.default, {
          id: knob.name,
          ref: 'input',
          style: _extends({}, styles, extraStyle),
          value: jsonString,
          onChange: function onChange(e) {return _this2.handleChange(e);} }));


    } }]);return ObjectType;}(_react2.default.Component);


ObjectType.propTypes = {
  knob: _propTypes2.default.object,
  onChange: _propTypes2.default.func };


ObjectType.serialize = function (object) {
  return JSON.stringify(object);
};

ObjectType.deserialize = function (value) {
  if (!value) return {};
  return JSON.parse(value);
};exports.default =

ObjectType;