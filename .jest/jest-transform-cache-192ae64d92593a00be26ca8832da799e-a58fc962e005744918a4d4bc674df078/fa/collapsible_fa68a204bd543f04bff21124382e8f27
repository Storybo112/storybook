'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _theme = require('./theme');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var wrapperStyles = _extends({
  display: 'block',
  paddingTop: '10px',
  marginBottom: '15px',
  listStyle: 'none',
  fontSize: '18px',
  fontWeight: 'bold' }, _theme.baseFonts);



var iconStyles = {
  float: 'right',
  fontWeight: 'normal',
  fontSize: '150%',
  lineHeight: '0.65' };var


Collapsible = function (_React$Component) {_inherits(Collapsible, _React$Component);
  function Collapsible(props) {_classCallCheck(this, Collapsible);

    // Collapsible will be closed by default but
    // allows props to be passed in to override initialState
    var _this = _possibleConstructorReturn(this, (Collapsible.__proto__ || Object.getPrototypeOf(Collapsible)).call(this, props));_this.state = { isActive: props.isActive || false };
    _this.handleClick = _this.handleClick.bind(_this);
    _this.focusToContent = _this.focusToContent.bind(_this);return _this;
  }_createClass(Collapsible, [{ key: 'componentWillReceiveProps', value: function componentWillReceiveProps(

    nextProps) {
      // Allow controlled toggling of active state
      if (nextProps.active !== this.props.active) {
        this.setState({
          isActive: nextProps.active });

      }
    } }, { key: 'focusToContent', value: function focusToContent()

    {
      var content = this.collapsibleBody;
      if (content) {
        content.focus();
      }
    } }, { key: 'handleClick', value: function handleClick(

    e) {
      e.preventDefault();
      this.setState({
        isActive: !this.state.isActive },
      this.focusToContent);
      // We will execute any additional onClick handlers that are passed
      // to the component
      var onClick = this.props.onClick;
      if (onClick) {
        onClick();
      }
    } }, { key: 'render', value: function render()

    {var _this2 = this;var _props =





      this.props,_props$tagName = _props.tagName,tagName = _props$tagName === undefined ? 'div' : _props$tagName,children = _props.children,title = _props.title,_props$id = _props.id,id = _props$id === undefined ? encodeURI(title) : _props$id;var
      isActive = this.state.isActive;
      var headingStyles = _extends({},
      wrapperStyles, {
        textDecoration: isActive ? 'underline' : 'none' });

      var Element = tagName;

      return (
        _react2.default.createElement(Element, null,
          _react2.default.createElement('a', {
              href: '#' + id,
              onClick: this.handleClick,
              'aria-label': isActive ? title + ' - hides content' : title + ' - shows more content',
              style: headingStyles },

            title,
            _react2.default.createElement('span', { style: iconStyles },
              isActive ? '-' : '+')),


          isActive &&
          _react2.default.createElement('div', {
              id: id,
              ref: function ref(c) {return _this2.collapsibleBody = c;} // eslint-disable-line no-return-assign
              , tabIndex: '-1' },

            children)));



    } }]);return Collapsible;}(_react2.default.Component);


Collapsible.propTypes = {
  tagName: _react.PropTypes.string,
  children: _react.PropTypes.node.isRequired,
  title: _react.PropTypes.string.isRequired,
  id: _react.PropTypes.string,
  isActive: _react.PropTypes.bool,
  onClick: _react.PropTypes.func };exports.default =


Collapsible;