'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.Provider = undefined;var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();exports.default =


















function (domNode, provider) {
  if (!(provider instanceof Provider)) {
    throw new Error('provider is not extended from the base Provider');
  }

  var defaultState = _extends({},
  _shortcuts2.default.defaultState,
  _api2.default.defaultState,
  _ui2.default.defaultState);

  var clientStore = new _podda2.default(defaultState);
  clientStore.registerAPI('toggle', function (store, key) {return store.set(key, !store.get(key));});

  var context = (0, _context2.default)(clientStore, domNode, provider);
  var app = (0, _mantraCore.createApp)(context);

  app.loadModule(_shortcuts2.default);
  app.loadModule(_api2.default);
  app.loadModule(_ui2.default);

  (0, _compose.setContext)(context);
  (0, _compose.setActions)(app._bindContext(app.actions));

  app.init();
};var _mantraCore = require('mantra-core');var _podda = require('podda');var _podda2 = _interopRequireDefault(_podda);var _context = require('./context.js');var _context2 = _interopRequireDefault(_context);var _shortcuts = require('./modules/shortcuts');var _shortcuts2 = _interopRequireDefault(_shortcuts);var _api = require('./modules/api');var _api2 = _interopRequireDefault(_api);var _ui = require('./modules/ui');var _ui2 = _interopRequireDefault(_ui);var _compose = require('./compose');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}var Provider = exports.Provider = function () {function Provider() {_classCallCheck(this, Provider);}_createClass(Provider, [{ key: 'renderPreview', value: function renderPreview(selectedKind, selectedStory) {throw new Error('Provider.renderPreview() is not implemented!');} }, { key: 'handleAPI', value: function handleAPI(api) {throw new Error('Provider.handleAPI() is not implemented!');} }]);return Provider;}();