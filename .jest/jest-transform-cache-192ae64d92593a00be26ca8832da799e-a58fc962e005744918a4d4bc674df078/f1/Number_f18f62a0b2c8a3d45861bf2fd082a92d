'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);
var _react = require('react');var _react2 = _interopRequireDefault(_react);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var styles = {
  display: 'table-cell',
  boxSizing: 'border-box',
  verticalAlign: 'middle',
  height: '26px',
  width: '100%',
  outline: 'none',
  border: '1px solid #f7f4f4',
  borderRadius: 2,
  fontSize: 11,
  padding: '5px',
  color: '#444' };var


NumberType = function (_React$Component) {_inherits(NumberType, _React$Component);
  function NumberType(props) {_classCallCheck(this, NumberType);var _this = _possibleConstructorReturn(this, (NumberType.__proto__ || Object.getPrototypeOf(NumberType)).call(this,
    props));
    _this.renderNormal = _this.renderNormal.bind(_this);
    _this.renderRange = _this.renderRange.bind(_this);return _this;
  }_createClass(NumberType, [{ key: 'renderNormal', value: function renderNormal()

    {var _this2 = this;var _props =
      this.props,knob = _props.knob,_onChange = _props.onChange;

      return (
        _react2.default.createElement('input', {
          id: knob.name,
          ref: 'input',
          style: styles,
          value: knob.value,
          type: 'number',
          onChange: function onChange() {return _onChange(parseFloat(_this2.refs.input.value));} }));


    } }, { key: 'renderRange', value: function renderRange()

    {var _this3 = this;var _props2 =
      this.props,knob = _props2.knob,_onChange2 = _props2.onChange;

      return (
        _react2.default.createElement('input', {
          id: knob.name,
          ref: 'input',
          style: styles,
          value: knob.value,
          type: 'range',
          min: knob.min,
          max: knob.max,
          step: knob.step,
          onChange: function onChange() {return _onChange2(parseFloat(_this3.refs.input.value));} }));


    } }, { key: 'render', value: function render()

    {var
      knob = this.props.knob;

      return knob.range ? this.renderRange() : this.renderNormal();
    } }]);return NumberType;}(_react2.default.Component);


NumberType.propTypes = {
  knob: _propTypes2.default.object,
  onChange: _propTypes2.default.func };


NumberType.serialize = function (value) {
  return String(value);
};

NumberType.deserialize = function (value) {
  return parseFloat(value);
};exports.default =

NumberType;