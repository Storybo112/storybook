'use strict';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _enzyme = require('enzyme');
var _index = require('./index.js');var _index2 = _interopRequireDefault(_index);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('manager.ui.components.layout.index', function () {
  beforeEach(function () {
    window.matchMedia = function () {return {
        matches: false, // Simulates if in Desktop Mode
        addListener: function addListener() {},
        removeListener: function removeListener() {} };};

  });

  describe('with default options', function () {
    test('should render provided components', function () {
      var wrap = (0, _enzyme.shallow)(
      _react2.default.createElement(_index2.default, {
        showLeftPanel: true,
        showDownPanel: true,
        goFullScreen: false,
        leftPanel: function leftPanel() {return 'LeftPanel';},
        downPanel: function downPanel() {return 'DownPanel';},
        preview: function preview() {return 'Preview';} }));



      var markup = wrap.html();
      expect(markup).toMatch(/LeftPanel/);
      expect(markup).toMatch(/DownPanel/);
      expect(markup).toMatch(/Preview/);
    });
  });

  describe('with goFullScreen=true', function () {
    test('should only render preview', function () {
      var wrap = (0, _enzyme.shallow)(
      _react2.default.createElement(_index2.default, {
        goFullScreen: true,
        leftPanel: function leftPanel() {return 'LeftPanel';},
        downPanel: function downPanel() {return 'DownPanel';},
        preview: function preview() {return 'Preview';} }));



      var markup = wrap.html();
      expect(markup).not.toMatch(/LeftPanel/);
      expect(markup).not.toMatch(/DownPanel/);
      expect(markup).toMatch(/Preview/);
    });
  });

  describe('with showLeftPanel=false', function () {
    test('should hide the leftPanel', function () {
      var wrap = (0, _enzyme.shallow)(
      _react2.default.createElement(_index2.default, {
        showLeftPanel: false,
        showDownPanel: true,
        goFullScreen: false,
        leftPanel: function leftPanel() {return 'LeftPanel';},
        downPanel: function downPanel() {return 'DownPanel';},
        preview: function preview() {return 'Preview';} }));



      var markup = wrap.html();
      expect(markup).not.toMatch(/LeftPanel/);
      expect(markup).toMatch(/DownPanel/);
      expect(markup).toMatch(/Preview/);
    });
  });

  describe('with showDownPanel=false', function () {
    test('should hide the downPanel', function () {
      var wrap = (0, _enzyme.shallow)(
      _react2.default.createElement(_index2.default, {
        showLeftPanel: true,
        showDownPanel: false,
        goFullScreen: false,
        leftPanel: function leftPanel() {return 'LeftPanel';},
        downPanel: function downPanel() {return 'DownPanel';},
        preview: function preview() {return 'Preview';} }));



      var markup = wrap.html();
      expect(markup).toMatch(/LeftPanel/);
      expect(markup).not.toMatch(/DownPanel/);
      expect(markup).toMatch(/Preview/);
    });
  });
});