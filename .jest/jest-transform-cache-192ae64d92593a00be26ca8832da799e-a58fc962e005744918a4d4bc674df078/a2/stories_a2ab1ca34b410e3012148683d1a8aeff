'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);
var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _theme = require('../theme');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var listStyle = _extends({}, _theme.baseFonts);



var listStyleType = {
  listStyleType: 'none',
  padding: '5px',
  margin: 'auto' };


var kindStyle = {
  fontSize: '15px',
  color: 'inherit',
  textDecoration: 'none',
  padding: '10px 0px',
  cursor: 'pointer',
  borderBottom: '1px solid #EEE' };


var storyStyle = {
  fontSize: '13px',
  color: 'inherit',
  textDecoration: 'none',
  padding: '8px 0px 8px 10px',
  cursor: 'pointer' };var


Stories = function (_React$Component) {_inherits(Stories, _React$Component);
  function Stories() {var _ref;_classCallCheck(this, Stories);for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}var _this = _possibleConstructorReturn(this, (_ref = Stories.__proto__ || Object.getPrototypeOf(Stories)).call.apply(_ref, [this].concat(
    args)));
    _this.renderKind = _this.renderKind.bind(_this);
    _this.renderStory = _this.renderStory.bind(_this);return _this;
  }_createClass(Stories, [{ key: 'fireOnKind', value: function fireOnKind(

    kind) {var
      onSelectStory = this.props.onSelectStory;
      if (onSelectStory) onSelectStory(kind, null);
    } }, { key: 'fireOnStory', value: function fireOnStory(

    story) {var _props =
      this.props,onSelectStory = _props.onSelectStory,selectedKind = _props.selectedKind;
      if (onSelectStory) onSelectStory(selectedKind, story);
    } }, { key: 'renderStory', value: function renderStory(

    story) {var
      selectedStory = this.props.selectedStory;
      var style = _extends({ display: 'block' }, storyStyle);
      var props = {
        onClick: this.fireOnStory.bind(this, story) };


      if (story === selectedStory) {
        style.fontWeight = 'bold';
      }

      return (
        _react2.default.createElement('li', { key: story },
          _react2.default.createElement('a', { href: '#', title: 'Open ' + story, style: style, onClick: props.onClick },
            story)));



    } }, { key: 'renderKind', value: function renderKind(_ref2)

    {var kind = _ref2.kind,stories = _ref2.stories;var
      selectedKind = this.props.selectedKind;
      var style = _extends({ display: 'block' }, kindStyle);
      var onClick = this.fireOnKind.bind(this, kind);

      if (kind === selectedKind) {
        style.fontWeight = 'bold';
        return (
          _react2.default.createElement('li', { key: kind },
            _react2.default.createElement('a', { href: '#', title: 'Open ' + kind, style: style, onClick: onClick },
              kind),

            _react2.default.createElement('div', null,
              _react2.default.createElement('ul', { style: listStyleType },
                stories.map(this.renderStory)))));




      }

      return (
        _react2.default.createElement('li', { key: kind },
          _react2.default.createElement('a', { href: '#', title: 'Open ' + kind, style: style, onClick: onClick },
            kind)));



    } }, { key: 'render', value: function render()

    {var
      stories = this.props.stories;
      return (
        _react2.default.createElement('div', { style: listStyle },
          _react2.default.createElement('ul', { style: listStyleType },
            stories.map(this.renderKind))));



    } }]);return Stories;}(_react2.default.Component);


Stories.propTypes = {
  stories: _propTypes2.default.array.isRequired,
  selectedKind: _propTypes2.default.string.isRequired,
  selectedStory: _propTypes2.default.string.isRequired,
  onSelectStory: _propTypes2.default.func };exports.default =


Stories;