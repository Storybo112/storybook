'use strict';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _enzyme = require('enzyme');
var _index = require('./index');var _index2 = _interopRequireDefault(_index);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('manager.ui.components.down_panel.index', function () {
  test('should render only the selected panel with display set other than "none"', function () {
    var panels = {
      test1: {
        render: function render() {
          return _react2.default.createElement('div', { id: 'test1' }, 'TEST 1');
        } },

      test2: {
        render: function render() {
          return _react2.default.createElement('div', { id: 'test2' }, 'TEST 2');
        } } };



    var onPanelSelect = function onPanelSelect() {return 'onPanelSelect';};

    var wrapper = (0, _enzyme.shallow)(
    _react2.default.createElement(_index2.default, { panels: panels, onPanelSelect: onPanelSelect, selectedPanel: 'test2' }));


    expect(wrapper.find('#test1').parent()).toHaveStyle('display', 'none');
    expect(wrapper.find('#test2').parent()).not.toHaveStyle('display', 'none');
  });

  test('should set onPanelSelected as onClick handlers of tabs', function () {
    var panels = {
      test1: {
        render: function render() {
          return _react2.default.createElement('div', null, 'TEST 1');
        } } };


    var onPanelSelect = jest.fn();
    var preventDefault = jest.fn();
    var wrapper = (0, _enzyme.shallow)(
    _react2.default.createElement(_index2.default, { panels: panels, onPanelSelect: onPanelSelect, selectedPanel: 'test1' }));

    wrapper.find('a').simulate('click', { preventDefault: preventDefault });

    expect(onPanelSelect).toHaveBeenCalled();
    expect(preventDefault).toHaveBeenCalled();
  });

  describe('when no panels are given', function () {
    test('should render "no panels available"', function () {
      var panels = {};
      var onPanelSelect = function onPanelSelect() {return 'onPanelSelect';};
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_index2.default, { panels: panels, onPanelSelect: onPanelSelect }));

      expect(wrapper.contains('no panels available')).toBe(true);
    });
  });
});