'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);
var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _types = require('./types');var _types2 = _interopRequireDefault(_types);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var InvalidType = function InvalidType() {return _react2.default.createElement('span', null, 'Invalid Type');};

var stylesheet = {
  field: {
    display: 'table-row',
    padding: '5px' },

  label: {
    display: 'table-cell',
    boxSizing: 'border-box',
    verticalAlign: 'top',
    paddingRight: 5,
    paddingTop: 7,
    textAlign: 'right',
    width: 80,
    fontSize: 10,
    color: 'rgb(68, 68, 68)',
    textTransform: 'uppercase',
    fontWeight: 600 } };



stylesheet.textarea = _extends({},
stylesheet.input, {
  height: '100px' });


stylesheet.checkbox = _extends({},
stylesheet.input, {
  width: 'auto' });var


PropField = function (_React$Component) {_inherits(PropField, _React$Component);
  function PropField(props) {_classCallCheck(this, PropField);var _this = _possibleConstructorReturn(this, (PropField.__proto__ || Object.getPrototypeOf(PropField)).call(this,
    props));
    _this._onChange = _this.onChange.bind(_this);return _this;
  }_createClass(PropField, [{ key: 'onChange', value: function onChange(

    e) {
      this.props.onChange(e.target.value);
    } }, { key: 'render', value: function render()

    {var _props =
      this.props,onChange = _props.onChange,knob = _props.knob;

      var InputType = _types2.default[knob.type] || InvalidType;

      return (
        _react2.default.createElement('div', { style: stylesheet.field },
          _react2.default.createElement('label', { htmlFor: knob.name, style: stylesheet.label }, '' +
            knob.name),

          _react2.default.createElement(InputType, { knob: knob, onChange: onChange })));


    } }]);return PropField;}(_react2.default.Component);exports.default = PropField;


PropField.propTypes = {
  onChange: _propTypes2.default.func.isRequired,
  knob: _propTypes2.default.object };